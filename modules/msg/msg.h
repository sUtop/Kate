// Модуль диспетчеризации сообщений

#ifndef __MSG_H
#define __MSG_H

#include <iostream>
#include <mutex>
#include <thread>
#include <atomic> // !!! TODO добавить 

namespace msg{
    void start();
    
}


class message{
// Класс сообщения определяется в диспетчере или в дополнительной библиотеке 
// так как должен быть доступен всем модулям    
};

class messageDispeather{
    std::mutex* mutex_list;
    
public:
    int send(message* (*from)(),void (*to)(message*));
    // для отправки сообщения вызывается send
    // в качестве параметров должны передаваться функции метода отправителя
    // и метода получателя (функции отправки и распаковки сообщения соответственно)
    // внутри модуля сообщения должны быть помещенны в очереди.
    // Возможные вызовы - 1. по таймеру диспетчером (функция from вызывается много раз), 
    //  2. по запросу отправителя - функция from вызывается один раз
    
};

#endif